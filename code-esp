#include <WiFi.h>
#include <HTTPClient.h> 
#include <LiquidCrystal_I2C.h>
#include <Wire.h>


LiquidCrystal_I2C lcd(0x27, 16, 2);

const char* ssid = "iptime-DH";
const char* password = "big wave";
const String endpoint = "http://www.kma.go.kr/wid/queryDFSRSS.jsp?zone=1159068000";
String line = ""; 
byte x = 0;

void setup(){
  Serial.begin(115200); 
  WiFi.begin(ssid, password); 
  while (WiFi.status() != WL_CONNECTED)
  { 
    delay(500);
    Serial.print("."); } 
  
  Serial.println("Connected to the WiFi network");
  get_weather();
  lcd.begin();
  Wire.begin(); 
 }
 
void get_weather() 
{ if ((WiFi.status() == WL_CONNECTED)) { //Check the current connection status 
  Serial.println("Starting connection to server..."); 
  HTTPClient http; 
  http.begin(endpoint); //Specify the URL
  int httpCode = http.GET(); //Make the request
  if (httpCode > 0) { //Check for the returning code
  line = http.getString(); 
  } 
  else { 
    Serial.println("Error on HTTP request");
    }
    // Serial.println(line); // 수신한 날씨 정보 시리얼 모니터 출력
    parsing();
    http.end(); //Free the resources 
    } 
} 

float temp0;
float temp1; 
float temp2; 
float ws0;
float stemp;

void loop() { 
  if(  touchRead(T0) < 20) //평상시의 touchRead값은 5~60, 터치시 10이하
  {get_weather2();}
  
  delay(1000);
  
  }

void parsing(){ 
  String announce_time; 
  int tm_start= line.indexOf(F("<tm>")); // "<tm>"문자가 시작되는 인덱스 값('<'의 인덱스)을 반환한다. 
  int tm_end= line.indexOf(F("</tm>")); 
  announce_time = line.substring(tm_start + 4, tm_end); // +4: "<tm>"스트링의 크기 4바이트, 4칸 이동
  
  String hour; 
  int hour_start= line.indexOf(F("<hour>"));
  int hour_end= line.indexOf(F("</hour>"));
  hour = line.substring(hour_start + 6, hour_end);
 
  String temp; 
  int temp_start= line.indexOf(F("<temp>")); 
  int temp_end= line.indexOf(F("</temp>")); 
  temp = line.substring(temp_start + 6, temp_end);
  temp0 = temp.toFloat();
  
  String wfEn;
  int wfEn_start= line.indexOf(F("<wfEn>")); 
  int wfEn_end= line.indexOf(F("</wfEn>")); 
  wfEn = line.substring(wfEn_start + 6, wfEn_end);

  
  int del_index = line.indexOf(F("</data>")); 
  
  if(temp0 >23 )
  {
  x=1;
  }
  else if(temp0 <23 && temp0 > 11 )
  {
  x=2;  
  }
  else if(temp0 < 11 )
  {
  x=3;
  }
   
  Wire.beginTransmission(0x13);
  Wire.write(x);
  Wire.endTransmission();

  line.remove(0, del_index + 7); // 시작 인덱스 부터 "</data>" 스트링 포함 삭제 
  line = ""; // 스트링 변수 line 데이터 추출 완료 }
  lcd.setCursor(0, 0);    
  lcd.clear();            // 글자를 모두 지워라.
  delay(1000);
  lcd.println(temp); 
  delay(1000);            // 1초 대기 
  lcd.setCursor(0,1);
  lcd.println(wfEn); 
  delay(1000);   
   
  
}
